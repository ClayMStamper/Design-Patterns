Strategy Pattern

- Use when you want to define a class that will have one behavior that is similar to other behaviors in a list
    - “I want a class to be able to choose from”
        - Not flying
        - Fly with wings
        - Fly super fast
    - One of several behaviors is used by the class dynamically

Define a series of algorithms, encapsulate each one (so that it’s solely responsible for its own data), and make them interchangeable. The Strategy Pattern  lets the algorithm vary independently from clients that use it.

Instead of using an interface in a traditional way, we use instance variables that are a subclass of of an interface.

￼
￼
￼
